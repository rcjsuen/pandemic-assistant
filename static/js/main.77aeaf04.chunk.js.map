{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","service/city.ts","components/EpidemicItem.tsx","components/EpidemicsContainer.tsx","pages/EpidemicsTab.tsx","components/InfectionsContainer.tsx","pages/InfectionsTab.tsx","pages/SetupTab.tsx","service/infectionDeck.ts","service/playerDeck.ts","service/pandemicAssistant.ts","App.tsx","controller/controller.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","City","EpidemicItem","props","icon","this","drawn","checkmarkCircleOutline","closeOutline","slot","position","React","Component","EpidemicsContainer","mounted","state","epidemics","controller","getEpidemicsDrawn","minCards","getMinRemainder","maxCards","getMaxRemainder","showActionSheet","attachPlayerDeckHandler","setState","minRounds","Math","ceil","maxRounds","color","index","expand","onClick","isOpen","onDidDismiss","buttons","text","handler","drawPlayerDeck","role","EpidemicsTab","fullscreen","collapse","size","toString","city","SanFrancisco","Chicago","Montreal","Atlanta","NewYork","WashingtonDC","London","Paris","Madrid","Essen","StPetersburg","Milan","LosAngeles","Miami","MexicoCity","Bogota","SaoPaolo","BuenosAires","Lima","Santiago","Lagos","Kinshasa","Johannesburg","Khartoum","Moscow","Algiers","Riyadh","Baghdad","Tehran","Cairo","Istanbul","Karachi","Delhi","Mumbai","Chennai","Kolkata","Beijing","Shanghai","HongKong","Taipei","Bangkok","Manila","Jakarta","HoChiMinhCity","Seoul","Tokyo","Osaka","Sydney","InfectionsContainer","groups","getCityGroups","discards","getDiscards","attachInfectionDeckHandler","updateState","intensify","sticky","card","side","removeInfectionCard","document","getElementById","close","group","button","drawInfectionDeck","InfectionsTab","SetupTab","playerCount","eventCards","epidemicCards","value","String","interface","onIonChange","Number","detail","setup","InfectionDeck","push","sort","a","b","localeCompare","idx","indexOf","splice","length","PlayerDeck","counts","drawnEpidemics","drawnCards","drawnCurrentBucket","deck","currentBucket","total","getStartingRemoval","remainder","split","floor","epidemic","depth","cards","i","PandemicAssistant","playerDeck","infectionDeck","epidemicsDrawn","epidemicsDrawnIndex","draw","playerDeckHandlers","infectionDeckHandlers","assistant","handlers","forEach","notifyHandlers","notifyPlayerDeckHandlers","notifyInfectionDeckHandlers","App","exact","path","to","tab","href","settingsOutline","warningOutline","globeOutline","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kHAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.77aeaf04.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t89,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t90,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t91,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t92,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t93,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t94,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t95,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t96,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t97,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t98,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t99,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t100,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t101,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t102,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t103,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t104,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t105,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t106,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t107,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t108,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t109,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t110,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t111,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t112,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t113,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t114,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t115,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t116,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t117,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t118,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t119,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t120,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t121,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t122,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t123,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t124,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t125,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t126,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t127,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t128,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t129,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t130,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t131,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 60;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t132,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 62;\nmodule.exports = webpackAsyncContext;","export enum City {\n    SanFrancisco = \"SanFrancisco\",\n    Chicago = \"Chicago\",\n    Montreal = \"Montreal\",\n    Atlanta = \"Atlanta\",\n    NewYork = \"NewYork\",\n    WashingtonDC = \"WashingtonDC\",\n    London = \"London\",\n    Paris = \"Paris\",\n    Madrid = \"Madrid\",\n    Essen = \"Essen\",\n    StPetersburg = \"StPetersburg\",\n    Milan = \"Milan\",\n    \n    LosAngeles = \"LosAngeles\",\n    Miami = \"Miami\",\n    MexicoCity = \"MexicoCity\",\n    Bogota = \"Bogota\",\n    SaoPaolo = \"SaoPaolo\",\n    BuenosAires = \"BuenosAires\",\n    Lima = \"Lima\",\n    Santiago = \"Santiago\",\n    Lagos = \"Lagos\",\n    Kinshasa = \"Kinshasa\",\n    Johannesburg = \"Johannesburg\",\n    Khartoum = \"Khartoum\",\n    \n    Moscow = \"Moscow\",\n    Algiers = \"Algiers\",\n    Riyadh = \"Riyadh\",\n    Baghdad = \"Baghdad\",\n    Tehran = \"Tehran\",\n    Cairo = \"Cairo\",\n    Istanbul = \"Istanbul\",\n    Karachi = \"Karachi\",\n    Delhi = \"Delhi\",\n    Mumbai = \"Mumbai\",\n    Chennai = \"Chennai\",\n    Kolkata = \"Kolkata\",\n    \n    Beijing = \"Beijing\",\n    Shanghai = \"Shanghai\",\n    HongKong = \"HongKong\",\n    Taipei = \"Taipei\",\n    Bangkok = \"Bangkok\",\n    Manila = \"Manila\",\n    Jakarta = \"Jakarta\",\n    HoChiMinhCity = \"HoChiMinhCity\",\n    Seoul = \"Seoul\",\n    Tokyo = \"Tokyo\",\n    Osaka = \"Osaka\",\n    Sydney = \"Sydney\",\n}\n\nexport function getColor(city: City): \"danger\" | \"warning\" | \"dark\" | \"primary\" {\n    switch (city) {\n    case City.SanFrancisco:\n    case City.Chicago:\n    case City.Montreal:\n    case City.Atlanta:\n    case City.NewYork:\n    case City.WashingtonDC:\n    case City.London:\n    case City.Paris:\n    case City.Madrid:\n    case City.Essen:\n    case City.StPetersburg:\n    case City.Milan:\n        return \"primary\";\n    case City.LosAngeles:\n    case City.Miami:\n    case City.MexicoCity:\n    case City.Bogota:\n    case City.SaoPaolo:\n    case City.BuenosAires:\n    case City.Lima:\n    case City.Santiago:\n    case City.Lagos:\n    case City.Kinshasa:\n    case City.Johannesburg:\n    case City.Khartoum:\n        return \"warning\";\n    case City.Moscow:\n    case City.Algiers:\n    case City.Riyadh:\n    case City.Baghdad:\n    case City.Tehran:\n    case City.Cairo:\n    case City.Istanbul:\n    case City.Karachi:\n    case City.Delhi:\n    case City.Mumbai:\n    case City.Chennai:\n    case City.Kolkata:\n        return \"dark\";\n    case City.Beijing:\n    case City.Shanghai:\n    case City.HongKong:\n    case City.Taipei:\n    case City.Bangkok:\n    case City.Manila:\n    case City.Jakarta:\n    case City.HoChiMinhCity:\n    case City.Seoul:\n    case City.Tokyo:\n    case City.Osaka:\n    case City.Sydney:\n        return \"danger\";\n    }\n    return \"danger\";\n}\n\nexport function toString(city: City) {\n    switch (city) {case City.SanFrancisco:\n        return \"San Francisco\";\n    case City.Chicago:\n        return \"Chicago\";\n    case City.Montreal:\n        return \"Montreal\";\n    case City.Atlanta:\n        return \"Atlanta\";\n    case City.NewYork:\n        return \"New York\";\n    case City.WashingtonDC:\n        return \"Washington D.C.\";\n    case City.London:\n        return \"London\";\n    case City.Paris:\n        return \"Paris\";\n    case City.Madrid:\n        return \"Madrid\";\n    case City.Essen:\n        return \"Essen\";\n    case City.StPetersburg:\n        return \"St. Petersburg\";\n    case City.Milan:\n        return \"Milan\";\n    case City.LosAngeles:\n        return \"Los Angeles\";\n    case City.Miami:\n        return \"Miami\";\n    case City.MexicoCity:\n        return \"Mexico City\";\n    case City.Bogota:\n        return \"Bogota\";\n    case City.SaoPaolo:\n        return \"Sao Paolo\";\n    case City.BuenosAires:\n        return \"Buenos Aires\";\n    case City.Lima:\n        return \"Lima\";\n    case City.Santiago:\n        return \"Santiago\";\n    case City.Lagos:\n        return \"Lagos\";\n    case City.Kinshasa:\n        return \"Kinshasa\";\n    case City.Johannesburg:\n        return \"Johannesburg\";\n    case City.Khartoum:\n        return \"Khartoum\";\n    case City.Moscow:\n        return \"Moscow\";\n    case City.Algiers:\n        return \"Algiers\";\n    case City.Riyadh:\n        return \"Riyadh\";\n    case City.Baghdad:\n        return \"Baghdad\";\n    case City.Tehran:\n        return \"Tehran\";\n    case City.Cairo:\n        return \"Cairo\";\n    case City.Istanbul:\n        return \"Istanbul\";\n    case City.Karachi:\n        return \"Karachi\";\n    case City.Delhi:\n        return \"Delhi\";\n    case City.Mumbai:\n        return \"Mumbai\";\n    case City.Chennai:\n        return \"Chennai\";\n    case City.Kolkata:\n        return \"Kolkata\";\n    case City.Beijing:\n        return \"Beijing\";\n    case City.Shanghai:\n        return \"Shanghai\";\n    case City.HongKong:\n        return \"Hong Kong\";\n    case City.Taipei:\n        return \"Taipei\";\n    case City.Bangkok:\n        return \"Bangkok\";\n    case City.Manila:\n        return \"Manila\";\n    case City.Jakarta:\n        return \"Jakarta\";\n    case City.HoChiMinhCity:\n        return \"Ho Chi Minh City\";\n    case City.Seoul:\n        return \"Seoul\";\n    case City.Tokyo:\n        return \"Tokyo\";\n    case City.Osaka:\n        return \"Osaka\";\n    case City.Sydney:\n        return \"Sydney\";\n    }\n}\n","import React from 'react';\nimport { IonIcon, IonItem, IonLabel } from '@ionic/react';\nimport { checkmarkCircleOutline, closeOutline } from 'ionicons/icons';\n\nexport default class EpidemicItem extends React.Component<{ drawn: boolean, position: number }> {\n\n    constructor(props: { drawn: boolean, position: number }) {\n        super(props)\n    }\n  \n    public render() {\n        return <IonItem key={this.props.position}>\n            <IonIcon icon={this.props.drawn ? checkmarkCircleOutline : closeOutline} slot=\"end\" />\n            <IonLabel>Epidemic {this.props.position}</IonLabel>\n        </IonItem>\n    }\n}\n","import React from 'react';\nimport { IonActionSheet, IonGrid, IonCol, IonRow, IonList, IonItem, IonLabel, IonButton, IonNote } from '@ionic/react';\nimport './EpidemicsContainer.css';\nimport { Controller } from '../controller/controller';\nimport EpidemicItem from './EpidemicItem';\n\nclass EpidemicsContainer extends React.Component<{ controller: Controller }, {\n    epidemics: boolean[];\n    minCards: number;\n    maxCards: number;\n    showActionSheet: boolean\n}> {\n\n    private mounted: boolean = false;\n\n    constructor(props: { controller: Controller }) {\n        super(props)\n        this.state = {\n            epidemics: this.props.controller.getEpidemicsDrawn(),\n            minCards: this.props.controller.getMinRemainder(),\n            maxCards: this.props.controller.getMaxRemainder(),\n            showActionSheet: false,\n        };\n        this.props.controller.attachPlayerDeckHandler(() => {\n            if (this.mounted) {\n                this.setState({\n                    epidemics: this.props.controller.getEpidemicsDrawn(),\n                    minCards: this.props.controller.getMinRemainder(),\n                    maxCards: this.props.controller.getMaxRemainder(),\n                });\n            } else {\n                this.state = {\n                    epidemics: this.props.controller.getEpidemicsDrawn(),\n                    minCards: this.props.controller.getMinRemainder(),\n                    maxCards: this.props.controller.getMaxRemainder(),\n                    showActionSheet: this.state.showActionSheet,\n                };\n            }\n        });\n    }\n\n    public componentDidMount(): void {\n        this.mounted = true;\n    }\n  \n    public render() {\n        const showActionSheet = this.state.showActionSheet;\n        const minRounds = Math.ceil(this.state.minCards / 2);\n        const maxRounds = Math.ceil(this.state.maxCards / 2);\n        return (\n            <IonList>\n                <IonItem>\n                    <IonLabel>Cards to Next Epidemic</IonLabel>\n                    <IonNote slot=\"end\" color=\"dark\">{this.state.minCards === 0 && this.state.maxCards === 0 ? \"0\" : `${this.state.minCards}-${this.state.maxCards}`}</IonNote>\n                </IonItem>\n                <IonItem>\n                    <IonLabel>Rounds to Next Epidemic</IonLabel>\n                    <IonNote slot=\"end\" color=\"dark\">{minRounds === 0 && maxRounds === 0 ? \"0\" : `${minRounds}-${maxRounds}`}</IonNote>\n                </IonItem>\n                {this.state.epidemics.map((drawn, index) => {\n                    return <EpidemicItem key={index} drawn={drawn} position={index + 1} />\n                })}\n                <IonGrid>\n                    <IonRow>\n                        <IonCol></IonCol>\n                        <IonCol>\n                            <IonButton expand=\"block\" onClick={() => { this.setState({showActionSheet: true}) }}>\n                                Draw\n                            </IonButton>\n                        </IonCol>\n                        <IonCol></IonCol>\n                    </IonRow>\n                </IonGrid>\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => { this.setState({ showActionSheet: false })}}\n                  buttons={[\n                    { text: \"Player Card\", handler: () => { this.props.controller.drawPlayerDeck(false) } },\n                    { text: \"Epidemic\", handler: () => { this.props.controller.drawPlayerDeck(true) } },\n                    { text: \"Cancel\", role: \"cancel\" }\n                  ]}\n                >\n                </IonActionSheet>\n            </IonList>\n        );\n    }\n}\n\nexport default EpidemicsContainer;\n","import { IonActionSheet, IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport EpidemicsContainer from '../components/EpidemicsContainer';\nimport './EpidemicsTab.css';\nimport { ControllerProps } from \"../controller/controller\";\n\nconst EpidemicsTab: React.FC<ControllerProps> = ({controller}) => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Epidemics</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Epidemics</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <EpidemicsContainer controller={controller}/>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default EpidemicsTab;\n","import React from 'react';\nimport { IonItemSliding, IonItemOptions, IonItemOption, IonGrid, IonCol, IonRow, IonList, IonItemDivider, IonItem, IonLabel, IonButton } from '@ionic/react';\nimport { checkboxOutline, checkmarkCircleOutline, close, closeOutline, exitOutline, layersOutline } from 'ionicons/icons';\nimport './InfectionsContainer.css';\nimport { City, getColor, toString } from '../service/city';\nimport { Controller } from '../controller/controller';\n\nclass InfectionsContainer extends React.Component<{ controller: Controller }, { groups: City[][], discards: City[] }> {\n\n    private mounted: boolean = false;\n\n    constructor(props: { controller: Controller }) {\n        super(props)\n        this.state = {\n            groups: this.props.controller.getCityGroups(),\n            discards: this.props.controller.getDiscards()\n        };\n        this.props.controller.attachInfectionDeckHandler(() => {\n            this.updateState();\n        });\n    }\n\n    public componentDidMount(): void {\n        this.mounted = true;\n    }\n\n    private updateState(): void {\n        if (this.mounted) {\n            this.setState({\n                groups: this.props.controller.getCityGroups(),\n                discards: this.props.controller.getDiscards()\n            });\n        } else {\n            this.state = {\n                groups: this.props.controller.getCityGroups(),\n                discards: this.props.controller.getDiscards()\n            };\n        }\n    }\n  \n    public render() {\n        return (\n            <div>\n                <IonGrid>\n                    <IonRow>\n                        <IonCol></IonCol>\n                        <IonCol>\n                            <IonButton expand=\"block\" onClick={() => {\n                                this.props.controller.intensify();\n                                this.updateState();\n                            }} >\n                                Intensify\n                            </IonButton>\n                        </IonCol>\n                        <IonCol></IonCol>\n                    </IonRow>\n                </IonGrid>\n                <IonList>\n                <IonItemDivider sticky>Discards</IonItemDivider>\n                    {this.state.discards.map((card, index) => {\n                    const id = `discard-${index}`;\n                    return <IonItemSliding id={id} key={index}>\n                      <IonItem>\n                        <IonLabel>{toString(card as City)}</IonLabel>\n                      </IonItem>\n                        <IonItemOptions side=\"end\">\n                            {/* remove a card via Resilient Population */}\n                            <IonItemOption color=\"danger\" onClick={() => {\n                                this.props.controller.removeInfectionCard(card);\n                                this.updateState();\n                                (document.getElementById(id) as any).close();\n                            }}>\n                                Remove\n                            </IonItemOption>\n                      </IonItemOptions>\n                    </IonItemSliding>\n                })}\n                {this.state.groups.map((group, index) => {\n                    return <div key={index}>\n                        <IonItemDivider sticky>{index === 0 ? \"Current Group\" : `Group ${index + 1}`}</IonItemDivider>\n                        {group.map((city, index) => {\n                            return <IonItem key={index} button onClick={() => { \n                                this.props.controller.drawInfectionDeck(city);\n                                this.updateState();\n                            }}>\n                                <IonLabel>{toString(city as City)}</IonLabel>\n                            </IonItem>\n                        })}\n                    </div>\n                })}\n                </IonList>\n            </div>\n        );\n    }\n}\n\nexport default InfectionsContainer;\n","import { IonButton, IonButtons, IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport InfectionsContainer from '../components/InfectionsContainer';\nimport { ControllerProps } from \"../controller/controller\";\nimport './InfectionsTab.css';\n\nconst InfectionsTab: React.FC<ControllerProps> = ({controller}) => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Infections</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Infections</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <InfectionsContainer controller={controller} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default InfectionsTab;\n","import React from 'react';\nimport { IonGrid, IonCol, IonRow, IonList, IonLabel, IonItem, IonSelect, IonSelectOption, IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport './SetupTab.css';\nimport { ControllerProps } from \"../controller/controller\";\n\nclass SetupTab extends React.Component<ControllerProps, { playerCount: number, eventCards: number, epidemicCards: number }> {\n\n    constructor(props: ControllerProps) {\n        super(props)\n        this.state = { playerCount: 2, eventCards: 4, epidemicCards: 5 };\n    }\n\n    public render() {\n        return (\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonTitle>Pandemic Assistant</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent fullscreen>\n                    <IonHeader collapse=\"condense\">\n                        <IonToolbar>\n                            <IonTitle size=\"large\">Pandemic Assistant</IonTitle>\n                        </IonToolbar>\n                    </IonHeader>\n                    <IonList>\n                        <IonItem>\n                            <IonLabel>Player Count</IonLabel>\n                            <IonSelect value={String(this.state.playerCount)} interface=\"popover\" onIonChange={e => {\n                                this.setState({ playerCount: Number(e.detail.value) })\n                            }}>\n                                <IonSelectOption value=\"1\">1</IonSelectOption>\n                                <IonSelectOption value=\"2\">2</IonSelectOption>\n                                <IonSelectOption value=\"3\">3</IonSelectOption>\n                                <IonSelectOption value=\"4\">4</IonSelectOption>\n                                <IonSelectOption value=\"5\">5</IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n\n                        <IonItem>\n                            <IonLabel>Event Cards</IonLabel>\n                            <IonSelect value={String(this.state.eventCards)} interface=\"popover\" onIonChange={e => {\n                                this.setState({ eventCards: Number(e.detail.value) })\n                            }}>\n                                <IonSelectOption value=\"0\">0</IonSelectOption>\n                                <IonSelectOption value=\"1\">1</IonSelectOption>\n                                <IonSelectOption value=\"2\">2</IonSelectOption>\n                                <IonSelectOption value=\"3\">3</IonSelectOption>\n                                <IonSelectOption value=\"4\">4</IonSelectOption>\n                                <IonSelectOption value=\"5\">5</IonSelectOption>\n                                <IonSelectOption value=\"6\">6</IonSelectOption>\n                                <IonSelectOption value=\"7\">7</IonSelectOption>\n                                <IonSelectOption value=\"8\">8</IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel>Epidemic Cards</IonLabel>\n                            <IonSelect value={String(this.state.epidemicCards)} interface=\"popover\" onIonChange={e => {\n                                this.setState({ epidemicCards: Number(e.detail.value) })\n                            }}>\n                                <IonSelectOption value=\"4\">4</IonSelectOption>\n                                <IonSelectOption value=\"5\">5</IonSelectOption>\n                                <IonSelectOption value=\"6\">6</IonSelectOption>\n                                <IonSelectOption value=\"7\">7</IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol></IonCol>\n                                <IonCol>\n                                    <IonButton expand=\"block\" onClick={() => {\n                                        this.props.controller.setup(this.state.playerCount, this.state.eventCards, this.state.epidemicCards);\n                                    }}>\n                                        Setup\n                                    </IonButton>\n                                </IonCol>\n                                <IonCol></IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    </IonList>\n                </IonContent>\n            </IonPage>\n        );\n    }\n}\n\nexport default SetupTab;\n","import { City } from \"./city\";\n\nexport class InfectionDeck {\n\n    private groups: City[][];\n\n    private discards: City[] = [];\n\n    constructor() {\n        this.groups = [[]];\n        for (const city of Object.keys(City)) {\n            this.groups[0].push(city as City);\n        }\n        this.groups[0].sort((a, b) => {\n            return a.localeCompare(b);\n        });\n    }\n\n    public draw(city: City): void {\n        this.discards.push(city);\n        this.discards.sort((a, b) => {\n            return a.localeCompare(b);\n        });\n        for (const group of this.groups) {\n            const idx = group.indexOf(city);\n            if (idx !== -1) {\n                group.splice(idx, 1);\n                if (group.length === 0) {\n                    this.groups.splice(0, 1);\n                }\n                break;\n            }\n        }\n    }\n\n    public intensify(): void {\n        // insert the discard pile into the front of the groups\n        this.groups.splice(0, 0, this.discards);\n        // reset the discard pile\n        this.discards = [];\n    }\n\n    public removeInfectionCard(city: City): void {\n        const idx = this.discards.indexOf(city);\n        if (idx === -1) {\n            throw new Error(\"Can only remove a card that is in the discard pile\")\n        }\n        this.discards.splice(idx, 1);\n    }\n\n    public getCityGroups(): City[][] {\n        return this.groups;\n    }\n\n    public getDiscards(): City[] {\n        return this.discards;\n    }\n\n    public hasDiscards(): boolean {\n        return this.discards.length > 0;\n    }\n}\n","export class PlayerDeck {\n\n    private counts: number[] = [];\n\n    private drawnEpidemics: boolean[] = [];\n\n    private drawnCards: number = 0;\n\n    private drawnCurrentBucket: number = 0;\n\n    private deck: number;\n\n    private currentBucket: number;\n\n    constructor(private playerCount: number, private eventCards: number, private epidemicCards: number) {\n        let total = 48 + this.eventCards + this.epidemicCards;\n        this.deck = total - this.getStartingRemoval();\n        let remainder = this.deck;\n        let epidemics = this.epidemicCards;\n        this.counts = [];\n        while (epidemics > 0) {\n            let split = Math.floor(remainder / epidemics);\n            remainder -= Math.floor(split);\n            epidemics--;\n            this.counts.push(split);\n            this.drawnEpidemics.push(false);\n        }\n        this.currentBucket = this.counts.length - 1;\n    }\n\n    public draw(epidemic: boolean): void {\n        this.drawnCards++;\n        this.drawnCurrentBucket++;\n        if (epidemic) {\n            if (this.drawnEpidemics[this.currentBucket]) {\n                throw new Error(\"Already drew an epidemic for this bucket\");\n            }\n            this.drawnEpidemics[this.currentBucket] = true;\n        }\n        let depth = this.deck - this.drawnCards\n        let cards = 0;\n        for (let i = 0; i < this.counts.length; i++) {\n            cards += this.counts[i];\n            if (cards > depth) {\n                return;\n            } else if (cards == depth) {\n                this.currentBucket--;\n                this.drawnCurrentBucket = 0;\n                return;\n            }\n        }\n    }\n\n    public getMinRemainder(): number {\n        if (this.drawnEpidemics[this.currentBucket]) {\n            return this.counts[this.currentBucket] - this.drawnCurrentBucket;\n        }\n        // next card could be an epidemic if we haven't drawn it yet\n        return 0;\n    }\n\n    public getMaxRemainder(): number {\n        if (this.drawnEpidemics[this.currentBucket]) {\n            return this.counts[this.currentBucket] - this.drawnCurrentBucket + this.counts[this.currentBucket - 1] - 1;\n        }\n        return this.counts[this.currentBucket] - this.drawnCurrentBucket - 1;\n    }\n\n    public getCounts(): number[] {\n        return this.counts;\n    }\n\n    private getStartingRemoval(): number {\n        return this.playerCount === 3 ? 9 : 8;\n    }\n}\n","import { City } from \"./city\";\nimport { InfectionDeck } from \"./infectionDeck\";\nimport { PlayerDeck } from \"./playerDeck\";\n\nexport class PandemicAssistant {\n\n    private playerDeck: PlayerDeck;\n\n    private infectionDeck: InfectionDeck;\n\n    private epidemicsDrawn: boolean[] = [];\n\n    private epidemicsDrawnIndex: number = 0;\n\n    constructor() {\n        this.playerDeck = new PlayerDeck(2, 2, 5);\n        this.infectionDeck = new InfectionDeck();\n    }\n\n    public setup(playerCount: number, eventCards: number, epidemicCards: number): void {\n        this.playerDeck = new PlayerDeck(playerCount, eventCards, epidemicCards);\n        this.infectionDeck = new InfectionDeck();\n        this.epidemicsDrawn = [];\n        for (let i = 0; i < epidemicCards; i++) {\n            this.epidemicsDrawn.push(false);\n        }\n    }\n\n    public getMinRemainder(): number {\n        return this.playerDeck.getMinRemainder();\n    }\n\n    public getMaxRemainder(): number {\n        return this.playerDeck.getMaxRemainder();\n    }\n\n    public drawPlayerDeck(epidemic: boolean): void {\n        this.playerDeck.draw(epidemic);\n        if (epidemic) {\n            this.epidemicsDrawn[this.epidemicsDrawnIndex] = true;\n            this.epidemicsDrawnIndex++;\n        }\n    }\n\n    public drawInfectionDeck(city: string): void {\n        this.infectionDeck.draw(city as City);\n    }\n\n    public removeInfectionCard(city: string): void {\n        this.infectionDeck.removeInfectionCard(city as City);\n    }\n\n    public intensify(): void {\n        this.infectionDeck.intensify();\n    }\n\n    public getCityGroups(): City[][] {\n        return this.infectionDeck.getCityGroups();\n    }\n\n    public getDiscards(): City[] {\n        return this.infectionDeck.getDiscards();\n    }\n\n    public getEpidemicsDrawn(): boolean[] {\n        return this.epidemicsDrawn;\n    }\n}\n\nexport const Assistant = new PandemicAssistant();\n","import { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { globeOutline, settingsOutline, warningOutline } from 'ionicons/icons';\nimport EpidemicsTab from './pages/EpidemicsTab';\nimport InfectionsTab from './pages/InfectionsTab';\nimport SetupTab from './pages/SetupTab';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport { Controller } from './controller/controller';\n\nconst controller = new Controller();\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonTabs>\n        <IonRouterOutlet>\n          <Route exact path=\"/setup\">\n            <SetupTab controller={controller} />\n          </Route>\n          <Route exact path=\"/epidemics\">\n            <EpidemicsTab controller={controller} />\n          </Route>\n          <Route exact path=\"/infections\">\n            <InfectionsTab controller={controller} />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/setup\" />\n          </Route>\n        </IonRouterOutlet>\n        <IonTabBar slot=\"bottom\">\n          <IonTabButton tab=\"setup\" href=\"/setup\">\n            <IonIcon icon={settingsOutline} />\n            <IonLabel>Setup</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"epidemics\" href=\"/epidemics\">\n            <IonIcon icon={warningOutline} />\n            <IonLabel>Epidemics</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"infections\" href=\"/infections\">\n            <IonIcon icon={globeOutline} />\n            <IonLabel>Infections</IonLabel>\n          </IonTabButton>\n        </IonTabBar>\n      </IonTabs>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","import { City } from \"../service/city\";\nimport { PandemicAssistant } from \"../service/pandemicAssistant\";\n\nexport interface ControllerProps {\n    controller: Controller;\n}\n\nexport class Controller {\n\n    private playerDeckHandlers: Function[] = [];\n\n    private infectionDeckHandlers: Function[] = [];\n\n    private assistant: PandemicAssistant;\n\n    constructor() {\n        this.assistant = new PandemicAssistant();\n    }\n\n    public attachPlayerDeckHandler(handler: Function): void {\n        this.playerDeckHandlers.push(handler);\n    }\n\n    public attachInfectionDeckHandler(handler: Function): void {\n        this.infectionDeckHandlers.push(handler);\n    }\n\n    private notifyHandlers(handlers: Function[]): void {\n        handlers.forEach(handler => {\n            handler();\n        });\n    }\n\n    private notifyPlayerDeckHandlers(): void {\n        this.notifyHandlers(this.playerDeckHandlers);\n    }\n\n    private notifyInfectionDeckHandlers(): void {\n        this.notifyHandlers(this.infectionDeckHandlers);\n    }\n\n    public setup(playerCount: number, eventCards: number, epidemicCards: number): void {\n        this.assistant.setup(playerCount, eventCards, epidemicCards);\n        this.notifyPlayerDeckHandlers();\n        this.notifyInfectionDeckHandlers();\n    }\n\n    public drawPlayerDeck(epidemic: boolean): void {\n        this.assistant.drawPlayerDeck(epidemic);\n        this.notifyPlayerDeckHandlers();\n    }\n\n    public drawInfectionDeck(city: string): void {\n        this.assistant.drawInfectionDeck(city);\n    }\n\n    public removeInfectionCard(city: string): void {\n        this.assistant.removeInfectionCard(city);\n    }\n\n    public intensify(): void {\n        this.assistant.intensify();\n    }\n\n    public getCityGroups(): City[][] {\n        return this.assistant.getCityGroups();\n    }\n\n    public getDiscards(): City[] {\n        return this.assistant.getDiscards();\n    }\n\n    public getEpidemicsDrawn(): boolean[] {\n        return this.assistant.getEpidemicsDrawn();\n    }\n\n    public getMinRemainder(): number {\n        return this.assistant.getMinRemainder();\n    }\n\n    public getMaxRemainder(): number {\n        return this.assistant.getMaxRemainder();\n    }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}